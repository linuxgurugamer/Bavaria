PART
{
	
	// --- general parameters ---
	name = ba-ebub
	module = Part
	author = Onkelsiebdruck
	 
	MODEL    
	{
		model = Bavaria/Parts/bubble/BA-ebub
	}
	scale = 1
	rescaleFactor = 1
	INTERNAL 
	{
		name = BA-ebubiva
	}
	 
	// --- node definitions ---
	
	node_stack_side = 0,0.10514,-0.49625,0,0,-1,0 // chutenode
	node_stack_bottom = 0, -0.6, 0.0, 0.0, -1.0, 0.0, 0
	node_stack_top = 0, 0.5, 0.0, 0.0, 1.0, 0.0, 0
	
	// --- editor parameters ---
	TechRequired = advExploration
	entryCost =800
	cost = 800
	category = Pods
	subcategory = 0
	title = Emergency Bubble 
	manufacturer = Bavarian Aerospace
	description = A lightweight emergency Pod with integrated docking port.
	 
	// --- attach parameters ---
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,1,
	 
	// --- standard part parameters ---
	mass = 0.25
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3 // 0.15
	angularDrag = 2
	crashTolerance = 40
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 3200
	fuelCrossFeed = True
	
	// Schwerpunktverlagerung 
	//CoMOffset = 0,-0.15,0.03
	CoMOffset = -0.002,-0.15,0.0075
	
	bulkheadProfiles = size1
		
	// Bubbleholder 
	MODULE
	{
		name = ModuleJettison
		jettisonName = stuetze
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.5
		jettisonForce = 15
		jettisonDirection = 0 0 1
	}
	
	// Dockingport 
	MODULE
	{
		name = ModuleDockingNode
		//referenceAttachNode = dockingNode
		referenceAttachNode = top
		nodeType = size1
	}
	
	
	// --- pod/rcs parameters ---
	CrewCapacity = 1
	
	MODULE
	{
		name = ModuleCommand
		minimumCrew = 1
		
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.015
		}
	}
	
	RESOURCE
	{
		name = ElectricCharge
		amount = 74
		maxAmount = 74
	}
	
	MODULE
	{
		name = ModuleReactionWheel
		
		PitchTorque = 0.5 // 3
		YawTorque = 0.5 // 3
		RollTorque = 0.5 // 3
		
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.15
		}
	}
	
	// MODULE {	name = ModuleSAS}
	
	
	//MODULE
	//{
	//	name = ModuleRCS
	//	thrusterTransformName = RCSthruster
	//	thrusterPower = .2
	//	resourceName = MonoPropellant
	//	atmosphereCurve
	//	{
	//		key = 0 260
	//		key = 1 100
	//	}
	//}

	EFFECTS
	{
		running
		{
			AUDIO_MULTI_POOL
			{
				channel = Ship
				transformName = RCSthruster
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.125
				volume = 1.0 0.5
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = RCSthruster
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 0.1
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}		
	}
	
	MODULE
	{
		name = ModuleRCSFX
		stagingEnabled = False
		thrusterTransformName = RCSthruster
		thrusterPower = 0.2
		resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
		runningEffectName = running
		atmosphereCurve
		{
			key = 0 260
			key = 1 100
			key = 4 0.001
		}
	}


	
	RESOURCE
	{
		name = MonoPropellant
		amount = 40
		maxAmount = 40
	}
	
	//fx_exhaustFlame_blue_small = 0.0, -0.03, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,running
	fx_exhaustFlame_white_tiny = 0.0, 0.035, 0.0, 0.0, 1.0, 0.0, running
	
	
	// --- Sound FX definition ---
	sound_vent_medium = engage
	sound_rocket_mini = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout
	vesselType = Lander
	
	
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		exhaustDamage = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust =7.5
		heatProduction = 20
		fxOffset = 0, 0, 0.019
		PROPELLANT
		{
			name = MonoPropellant
				
			ratio = 1
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 290
			key = 1 110
		}
	}
	

	//EFFECTS
	//{
	//	running
	//	{
	//		AUDIO
	//		{
	//			channel = Ship
	//			clip = sound_rocket_mini
	//			volume = 0.0 0.0
	//			volume = 1.0 0.5
	//			pitch = 0.0 0.5
	//			pitch = 1.0 1.0
	//			loop = true
	//		}
	//		MODEL_MULTI_PARTICLE
	//		{
	//			modelName = Squad/FX/Monoprop_small
	//			transformName = thrustTransform
	//			emission = 0.0 0.0
	//			emission = 0.4 0.8
	//			emission = 1.0 1.0
	//			speed = 0.0 0.8
	//			speed = 1.0 1.0
	//			//localOffset = 0, 0, 1
	//			//localPosition = 0, 0, 0.12
	//			localRotation = -90, 0, 0
	//		}
	//	}	
	//	engage
	//	{
	//		AUDIO
	//		{
	//			channel = Ship
	//			clip = sound_vent_soft
	//			volume = 1.0
	//			pitch = 2.0
	//			loop = false
	//		}
	//	}
	//	flameout
	//	{
	//		PREFAB_PARTICLE
	//		{
	//			prefabName = fx_exhaustSparks_flameout_2
	//			transformName = thrustTransform
	//			oneShot = true
	//		}
	//		AUDIO
	//		{
	//			channel = Ship
	//			clip = sound_explosion_low
	//			volume = 1.0
	//			pitch = 2.0
	//			loop = false
	//		}
	//	}	
	//}
	//MODULE
	//{
	//	name = ModuleEnginesFX
	//	thrustVectorTransformName = thrustTransform
	//	exhaustDamage = False
	//	ignitionThreshold = 0.1
	//	minThrust = 0
	//	maxThrust = 7.5
	//	heatProduction = 30
	//	fxOffset = 0, 0, 1.02
	//	EngineType = MonoProp
	//	exhaustDamageDistanceOffset = 0.25
	//	runningEffectName = running
	//	PROPELLANT
	//	{
	//		name = MonoPropellant
	//		ratio = 0.9
	//		DrawGauge = True
	//	}
	//	atmosphereCurve
	//	{
	//		key = 0 250
	//		key = 1 120
	//		key = 4 0.001
	//	}
	//}	
	
	
	MODULE
	{
		name = MechJebCore
		// only smart ass for retrogade burst and landingpart active
		//blacklist =  MechJebModuleTranslatron MechJebModuleAscentAutopilot MechJebModuleAscentGuidance MechJebModuleAscentPathEditor MechJebModuleDockingAutopilot MechJebModuleDockingGuidance MechJebModuleRendezvousAutopilot MechJebModuleRendezvousAutopilotWindow MechJebModuleRendezvousGuidance MechJebModuleRoverController MechJebModuleRoverWindow MechJebModuleNodeExecutor  MechJebModuleSpaceplaneAutopilot MechJebModuleSpaceplaneGuidance MechJebModuleAttitudeAdjustment MechJebModuleNodeEditor MechJebModuleThrustWindow MechJebModuleWarpHelper 	
		// blacklist deactivated 
		
	}
	// special effects
	
	
	// RCS Animation
	MODULE 
	{
		name = ModuleAnimateGeneric
		animationName = RCSmove
		startEventGUIName = "deploy RCS"
		endEventGUIName = "retract RCS"
		toggleActionName = toggle RCSmove
	}
	
	// takes only effect with deadly reentry or a big bad engine pointing on it
	MODULE
	{
		name = ModuleAnimateHeat
		ThermalAnim = grisu
	}
	
	MODULE
	{
		name = RasterPropMonitorComputer
	}
	MODULE
	{
		name = JSITransparentPod
		transparentTransforms = Scheiben
	} 
		
	MODULE
	{
		name = ModuleHeatShield
		direction = 0, -1, 0 // bottom of pod
		reflective = 0.60 // 5% of heat is ignored at correct angle
		ablative = AblativeShielding
		loss
		{ // loss is based on the shockwave temperature (also based on density)
			key = 650 0  0 0 // start ablating at 650 degrees C
			key = 1000 32 0 0 // peak ablation at 1000 degrees C
			key = 3000 40 0 0 // max ablation at 3000 degrees C
		}
		dissipation
		{ // dissipation is based on the part's current temperature
				key = 300 0 0 0 // begin ablating at 300 degrees C
				key = 500 480 0  0 // maximum dissipation at 500 degrees C
				// was 64/80/360
		}
	}
	//RESOURCE
	//{
	//	name = AblativeShielding
	//	amount = 60
	//	maxAmount = 60
	//}
	
	RESOURCE
	{
		name = Ablator
		amount = 200
		maxAmount = 200
	}

	MODULE
	{
		name = ModuleAblator
		ablativeResource = Ablator
		lossExp = -7500
		lossConst = 0.1
		pyrolysisLossFactor = 6000
		reentryConductivity = 0.01
		ablationTempThresh = 500

		useChar = True
		charModuleName = shieldChar
	}
		
	EFFECTS
	{
		pumpen
		{
			AUDIO
			{
				channel = Ship
				clip = Bavaria/Sounds/aufpump2
				volume = 0.0 0.0
				volume = 1.0 0.8
				pitch = 0.0 0.7
				pitch = 1.0 1.0
				loop = false
			}	
		}	
	abpumpen
		{
			AUDIO
			{
				channel = Ship
				clip = Bavaria/Sounds/abpump
				volume = 0.0 0.0
				volume = 1.0 0.8
				pitch = 0.0 0.7
				pitch = 1.0 1.0
				loop = false
			}	
		}	
		
	}
		
	MODULE:NEEDS[Firespitter]
	{
		name = FSanimateGeneric
		animationName = pump
		startEventGUIName = "inflate collar"
		endEventGUIName = "deflate collar"
		toggleActionName = Toggle collar
		availableInEVA = false
		playAnimationOnEditorSpawn = false
		moduleID = 1
		startDeployEffect = pumpen
		startRetractEffect = abpumpen
	}
	
	
	MODULE:NEEDS[Firespitter]
	{
		name = FSbuoyancy
	
		buoyancyForce = 23.0 // the force applied to lift the part, scaled by depth according to buoyancyRange
	
		buoyancyRange = 0.4 // the max depth at which the buoyancy will be scaled up. at this depth, the force applied is equal to buyoancyForce. At 0 depth, the force is 0
	// .15
		buoyancyVerticalOffset = 0.25 // how high the part rides on the water in meters. Not a position offset inside the part. This will be applied in the global axis regardless of part rotation. Think iceberg/styrofoam.
	        // for subs you could play with that value to make it think you are at sea level buoyancywisse at an entirely different depth. You could even change this value at run time to create the whole up/down code (Using your own code I mean)
		maxVerticalSpeed = 0.2 // the max speed vertical speed at which there will be a liftng force applied. Reduces bobbing.
		dragInWater = 1.5 // when in water, apply drag to slow the craft down. Stock drag is 3.
		debugMode = True // enables buoyancy control context menus
		waterImpactTolerance = 125 // For sea planes, any part in the water during take off should have a resistance high enough to withstand take off speeds.
	
		forcePointName = liftpointer1// you can set an alternate transform name to set up multi point float. Optional
		//forcePointName = liftpointer2
		//forcePointName = liftpointer3
		//forcePointName = liftpointer4
	
		splashFXEnabled = True // on by default, creates splashes even deep under water currently...
	
	}
		// ende
}
